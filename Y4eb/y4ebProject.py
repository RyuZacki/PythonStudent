# ----------------------------------------------------------------------------------------------------------------------
# Основные темы
# 1.Синтаксис
# 2.Переменные и типы данных
# 3.Условные операторы
# 4.Циклы
# 5.Списки
# 6.Индексы и срезы
# 7.Кортежи
# 8.Словари
# 9.Множества
# 10.Функции
# 11.Исключения
# 12.Работа с файломи
# 13.Модулю
# 14.Основы ООП
# 15.Наследования
# 16.Конструкторы
# 17.Декораторы
# ----------------------------------------------------------------------------------------------------------------------
# 1.Синтаксис
# ----------------------------------------------------------------------------------------------------------------------

# Простые операции
print(2 + 3)  # print функция вывода
print(8 - 3)
print(2 * 3)
print(6 / 3)

print(7 // 3)  # Сколько 3 помещается в 2
print(9 % 4)  # Узнаём остаток
print(2 ** 3)  # Возводим в степень

text = input("Что то введи: ")  # функция ввода

# ----------------------------------------------------------------------------------------------------------------------
# 2.Переменные и тпиы данных
# ----------------------------------------------------------------------------------------------------------------------

# Называть переменные начиная с чисел или символов по типу &$ не желательно
name = "Tom"  # Создание переменной
userName = "Tom"
user_name = "Tom"
# 123name - Плохой пример переменной
# %?:name - Плохой пример переменной

# Типы данных
Int = 123
Float = 3.14
Boolean = True  # или False
String = "Tom"

num_1 = input("Enter first num: ")  # 34
num_2 = input("Enter second num: ")  # 26
res = num_1 + num_2  # 3426 - Мы получили данное значение, потому что num_1 и num_2 являются типами данных str
print("Result is, ", res)
# Что бы num_1 и num_2 стали типами данных int
# Надо их инициализировать
num_3 = input("Enter first num: ")  # 34
num_4 = int(input("Enter second num: "))  # 26
res2 = int(num_3) + num_4  # 60
print("Result is, ", res2)

# Для удаления переменной
del res

# Операции с переменными
X = 1
X += 1  # Увеличиваем переменную на 1
X *= 2  # Увеличиваем переменную в 2 раза
# И тд...

# ----------------------------------------------------------------------------------------------------------------------
# 3.Условные операторы
# ----------------------------------------------------------------------------------------------------------------------

# Самый простой условный оператор
if 1:
    print("True")  # Выводит True

numMm = input("Введите имя: ")
if numMm == "Test":
    print("True\n")
print("All is okay")

# Условная структура
num = int(input("Введите число: "))
if num > 0:
    print("Вы ввели число больше 0")
    if 3 < num < 7:
        print("Вы ввели число между 3 и 7")
        if num == 5:
            print("Вы ввели число равное 5")
        else:
            print("Число больше 7 или меньше 3")
    elif 10 < num < 15:
        print("Ваше число между 10 и 15")
        if str(len(num)) == 2:
            print("Ваше число состоит из 2 цифр")
elif num < - 10:
    print("Вы ввели число меньше -10")
else:
    print("Вы ввели число меньше 0 и больше -10")
print("All is okay")

# Условие в переменной
nameN = input()
A = 'Yes' if name != "Test" else 'No'
print(A)

# ----------------------------------------------------------------------------------------------------------------------
# 4.Циклы
# ----------------------------------------------------------------------------------------------------------------------
# Цикл While
i = 0
while i < 10:  # Если поставить <= то результат будет: 0 2 4 6 8 10
    print(i)
    i += 2
# Результат будет: 0 2 4 6 8

# Цикл For
for j in 'hello world':
    if j == 'w':
        continue  # Тут мы пропускаем w
    if j == 'a':
        break  # Закончить цикл
    print(j * 2, end='')
else:
    print("Буквы 'a' нету ")

# ----------------------------------------------------------------------------------------------------------------------
# 5.Списки
# ----------------------------------------------------------------------------------------------------------------------

# Создание списка
l = []
lis = [1, 56, 'x', 34, 2.34, ['S', 't', 'r', 'o', 'k', 'a']]
print(lis)  # Вывод списка

a = [a + b for a in 'list' if a != 's' for b in 'soup' if b != 'u']
print(a)

l.append(23)  # append добавляет в конец списка указанное значение
l.append(34)
print(l)  # [23, 34]
b = [24, 67]
l.extend(b)  # [23, 34, 24, 67] добавили ещё один списк b
l.insert(1, 56)  # [23, 56, 34, 24, 67] добавили на 1 позицию 56
l.remove(34)  # [23, 56, 24, 67] удалили 34
l.pop(0)  # [56, 24, 67, 34]
print(l.index(56))  # 0 - узнаём индекс 56
print(l.count(34))
l.sort()  # [24, 34, 56, 67] отсортировали списк
l.reverse()  # [67, 56, 34, 24] перевернули списк
l.clear()  # [] очистили списк
print(l)

# ----------------------------------------------------------------------------------------------------------------------
# 6.Индексы и срезы
# ----------------------------------------------------------------------------------------------------------------------

l2 = [34, 'sd', 56, 34.34]
print(l2[4])  # IndexError
print(l2[-1])  # 34.34

i1 = 0
while i1 < 4:
    print(l2[i1])
    i1 += 1

# Срез
print(l2[:])  # [34, 'sd', 56, 34.34]
print(l2[1:])  # ['sd', 56, 34.34] срезали 1 элемент 34
print(l2[:3])  # [34, 'sd', 56]
print(l2[::2])  # [34, 56]
print(l2[::-1])  # [34.34, 56, 'sd', 34]
print(l2[-2::-2])  # [56, 34]

# ----------------------------------------------------------------------------------------------------------------------
# 7.Кортежи
# ----------------------------------------------------------------------------------------------------------------------

aa = (43, 56, 45.23, 'd')
bb = [43, 56, 45.23, 'd']

print(aa.__sizeof__())  # 56
print(bb.__sizeof__())  # 72

ad = tuple("hello world")
ad1 = "hello world", 'sdf', 453
print(a)  # ('h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd')
print(ad1)  # ("hello world", 'sdf', 453)
print(ad1.count(354))  # 1

# ----------------------------------------------------------------------------------------------------------------------
# 8.Словари
# ----------------------------------------------------------------------------------------------------------------------

D = {}  # Созданеи словаря
print(D)  # {}
D2 = {'test': 1, 'test_2': "TeST"}
print(D2['test'])  # 1
print(D2['test_2'])  # TeST
print(D2)  # {'test': 1, 'test_2': "TeST"}
D3 = dict(short='dict', longer='dictionary')
print(D3)  # {'short': 'dict', 'longer': 'dictionary'}
D3['short'] = 234
print(D3)  # {'short': 234, 'longer': 'dictionary'}
D4 = dict([(23, 34), (56, 87)])
print(D4)  # {56: 87, 23: 34}
D5 = dict.fromkeys(['a', 'b'], 1)
print(D5)  # {'d': None, 'a': None}
print(D5)  # {'d': 1, 'a': 1}
D6 = {a: a ** 2 for a in range(7)}
print(D6)  # {0: 0, 1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36}

# ----------------------------------------------------------------------------------------------------------------------
# 9.Множества
# ----------------------------------------------------------------------------------------------------------------------

Aa = set("Hello")
print(type(Aa))  # <class 'set'>
print(Aa)  # Set()
print(Aa)  # {'o', 'l', 'h', 'e'}
Aa2 = {'23', 32}
print(type(Aa2))  # <class 'set'>
print(Aa2)  # {32, '23'}
Aa3 = {i ** 2 for i in range(10)}
print(type(Aa2))  # <class 'set'>
print(Aa2)  # {0, 1, 64, 4, 36, 9, 16, 49, 81, 25}
F = ['r', 's', 'w', 'a', 's', 'w']
print(F)  # ['r', 's', 'w', 'a', 's', 'w']
print(set(F))  # {'s', 'w', 'r', 'a'}
Ff = {32, 45, 43.23, 76}
print(len(Ff))  # 4
x = 45
print(x in Ff)  # True
Fa = {67, 12, 90}
print(a.isdisjoint(Fa))  # True
print(Ff == Fa)  # False


# ----------------------------------------------------------------------------------------------------------------------
# 10.Функции
# ----------------------------------------------------------------------------------------------------------------------

# Создание функции
def func(x):
    return x  # Возвращаем x


print(func(23))  # 23


def func1(x, a):
    res = x + a
    return res


print(func1(23, 12))  # 45
print(func1("Hello", "world"))  # "Hello world"


def func2(x):
    def add(a):
        return x + a

    return add


test = func(100)
print(test(200))


def func3(r, w, y=2):
    res = r + w
    res *= y
    return res


print(func3(2, 4))  # 12


def func4(*args):
    return args


print(func4(23, 45, 76))  # (23, 45, 76)


def func5(**args):
    return args


print(func5(a=23, n=56, o=90))  # {'n': 56, 'o': 90, 'a': 23}
print(func5(longer=dictionary, short=dict))  # {'longer': 'dictionary', 'short': 'dict'}

add = lambda x, y: x * y
print(add(2, 5))  # 10
print(add('q', 2))  # qq
print((lambda x, y: x * y)(2, 6))  # 12
fun = lambda *args: args
print(fun(2, 56, 78.56))  # (2, 56, 78.56)

# ----------------------------------------------------------------------------------------------------------------------
# 11.Исключения
# ----------------------------------------------------------------------------------------------------------------------


